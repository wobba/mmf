using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

namespace NTFS.Sparse.Win32
{
    [Flags]
    public enum EIoControlCode : uint
    {
        // STORAGE
        StorageBase = EFileDevice.MassStorage,
        StorageCheckVerify = (StorageBase << 16) | (0x0200 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        StorageCheckVerify2 = (StorageBase << 16) | (0x0200 << 2) | EIoMethod.Buffered | (0 << 14), // FileAccess.Any
        StorageMediaRemoval = (StorageBase << 16) | (0x0201 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        StorageEjectMedia = (StorageBase << 16) | (0x0202 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        StorageLoadMedia = (StorageBase << 16) | (0x0203 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        StorageLoadMedia2 = (StorageBase << 16) | (0x0203 << 2) | EIoMethod.Buffered | (0 << 14),
        StorageReserve = (StorageBase << 16) | (0x0204 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        StorageRelease = (StorageBase << 16) | (0x0205 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        StorageFindNewDevices = (StorageBase << 16) | (0x0206 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        StorageEjectionControl = (StorageBase << 16) | (0x0250 << 2) | EIoMethod.Buffered | (0 << 14),
        StorageMcnControl = (StorageBase << 16) | (0x0251 << 2) | EIoMethod.Buffered | (0 << 14),
        StorageGetMediaTypes = (StorageBase << 16) | (0x0300 << 2) | EIoMethod.Buffered | (0 << 14),
        StorageGetMediaTypesEx = (StorageBase << 16) | (0x0301 << 2) | EIoMethod.Buffered | (0 << 14),
        StorageResetBus = (StorageBase << 16) | (0x0400 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        StorageResetDevice = (StorageBase << 16) | (0x0401 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        StorageGetDeviceNumber = (StorageBase << 16) | (0x0420 << 2) | EIoMethod.Buffered | (0 << 14),
        StoragePredictFailure = (StorageBase << 16) | (0x0440 << 2) | EIoMethod.Buffered | (0 << 14),
        StorageObsoleteResetBus = (StorageBase << 16) | (0x0400 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        StorageObsoleteResetDevice = (StorageBase << 16) | (0x0401 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        // DISK
        DiskBase = EFileDevice.Disk,
        DiskGetDriveGeometry = (DiskBase << 16) | (0x0000 << 2) | EIoMethod.Buffered | (0 << 14),
        DiskGetPartitionInfo = (DiskBase << 16) | (0x0001 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskSetPartitionInfo = (DiskBase << 16) | (0x0002 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskGetDriveLayout = (DiskBase << 16) | (0x0003 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskSetDriveLayout = (DiskBase << 16) | (0x0004 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskVerify = (DiskBase << 16) | (0x0005 << 2) | EIoMethod.Buffered | (0 << 14),
        DiskFormatTracks = (DiskBase << 16) | (0x0006 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskReassignBlocks = (DiskBase << 16) | (0x0007 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskPerformance = (DiskBase << 16) | (0x0008 << 2) | EIoMethod.Buffered | (0 << 14),
        DiskIsWritable = (DiskBase << 16) | (0x0009 << 2) | EIoMethod.Buffered | (0 << 14),
        DiskLogging = (DiskBase << 16) | (0x000a << 2) | EIoMethod.Buffered | (0 << 14),
        DiskFormatTracksEx = (DiskBase << 16) | (0x000b << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskHistogramStructure = (DiskBase << 16) | (0x000c << 2) | EIoMethod.Buffered | (0 << 14),
        DiskHistogramData = (DiskBase << 16) | (0x000d << 2) | EIoMethod.Buffered | (0 << 14),
        DiskHistogramReset = (DiskBase << 16) | (0x000e << 2) | EIoMethod.Buffered | (0 << 14),
        DiskRequestStructure = (DiskBase << 16) | (0x000f << 2) | EIoMethod.Buffered | (0 << 14),
        DiskRequestData = (DiskBase << 16) | (0x0010 << 2) | EIoMethod.Buffered | (0 << 14),
        DiskControllerNumber = (DiskBase << 16) | (0x0011 << 2) | EIoMethod.Buffered | (0 << 14),
        DiskSmartGetVersion = (DiskBase << 16) | (0x0020 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskSmartSendDriveCommand = (DiskBase << 16) | (0x0021 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskSmartRcvDriveData = (DiskBase << 16) | (0x0022 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskUpdateDriveSize = (DiskBase << 16) | (0x0032 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskGrowPartition = (DiskBase << 16) | (0x0034 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskGetCacheInformation = (DiskBase << 16) | (0x0035 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskSetCacheInformation = (DiskBase << 16) | (0x0036 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskDeleteDriveLayout = (DiskBase << 16) | (0x0040 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskFormatDrive = (DiskBase << 16) | (0x00f3 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        DiskSenseDevice = (DiskBase << 16) | (0x00f8 << 2) | EIoMethod.Buffered | (0 << 14),
        DiskCheckVerify = (DiskBase << 16) | (0x0200 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskMediaRemoval = (DiskBase << 16) | (0x0201 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskEjectMedia = (DiskBase << 16) | (0x0202 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskLoadMedia = (DiskBase << 16) | (0x0203 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskReserve = (DiskBase << 16) | (0x0204 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskRelease = (DiskBase << 16) | (0x0205 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskFindNewDevices = (DiskBase << 16) | (0x0206 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        DiskGetMediaTypes = (DiskBase << 16) | (0x0300 << 2) | EIoMethod.Buffered | (0 << 14),
        // CHANGER
        ChangerBase = EFileDevice.Changer,
        ChangerGetParameters = (ChangerBase << 16) | (0x0000 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        ChangerGetStatus = (ChangerBase << 16) | (0x0001 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        ChangerGetProductData = (ChangerBase << 16) | (0x0002 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        ChangerSetAccess = (ChangerBase << 16) | (0x0004 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        ChangerGetElementStatus = (ChangerBase << 16) | (0x0005 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        ChangerInitializeElementStatus = (ChangerBase << 16) | (0x0006 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        ChangerSetPosition = (ChangerBase << 16) | (0x0007 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        ChangerExchangeMedium = (ChangerBase << 16) | (0x0008 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        ChangerMoveMedium = (ChangerBase << 16) | (0x0009 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        ChangerReinitializeTarget = (ChangerBase << 16) | (0x000A << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        ChangerQueryVolumeTags = (ChangerBase << 16) | (0x000B << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        // FILESYSTEM
        FsctlRequestOplockLevel1 = (EFileDevice.FileSystem << 16) | (0 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlRequestOplockLevel2 = (EFileDevice.FileSystem << 16) | (1 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlRequestBatchOplock = (EFileDevice.FileSystem << 16) | (2 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlOplockBreakAcknowledge = (EFileDevice.FileSystem << 16) | (3 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlOpBatchAckClosePending = (EFileDevice.FileSystem << 16) | (4 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlOplockBreakNotify = (EFileDevice.FileSystem << 16) | (5 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlLockVolume = (EFileDevice.FileSystem << 16) | (6 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlUnlockVolume = (EFileDevice.FileSystem << 16) | (7 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlDismountVolume = (EFileDevice.FileSystem << 16) | (8 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlIsVolumeMounted = (EFileDevice.FileSystem << 16) | (10 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlIsPathnameValid = (EFileDevice.FileSystem << 16) | (11 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlMarkVolumeDirty = (EFileDevice.FileSystem << 16) | (12 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlQueryRetrievalPointers = (EFileDevice.FileSystem << 16) | (14 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlGetCompression = (EFileDevice.FileSystem << 16) | (15 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlSetCompression = (EFileDevice.FileSystem << 16) | (16 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        FsctlMarkAsSystemHive = (EFileDevice.FileSystem << 16) | (19 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlOplockBreakAckNo2 = (EFileDevice.FileSystem << 16) | (20 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlInvalidateVolumes = (EFileDevice.FileSystem << 16) | (21 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlQueryFatBpb = (EFileDevice.FileSystem << 16) | (22 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlRequestFilterOplock = (EFileDevice.FileSystem << 16) | (23 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlFileSystemGetStatistics = (EFileDevice.FileSystem << 16) | (24 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlGetNtfsVolumeData = (EFileDevice.FileSystem << 16) | (25 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlGetNtfsFileRecord = (EFileDevice.FileSystem << 16) | (26 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlGetVolumeBitmap = (EFileDevice.FileSystem << 16) | (27 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlGetRetrievalPointers = (EFileDevice.FileSystem << 16) | (28 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlMoveFile = (EFileDevice.FileSystem << 16) | (29 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlIsVolumeDirty = (EFileDevice.FileSystem << 16) | (30 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlGetHfsInformation = (EFileDevice.FileSystem << 16) | (31 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlAllowExtendedDasdIo = (EFileDevice.FileSystem << 16) | (32 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlReadPropertyData = (EFileDevice.FileSystem << 16) | (33 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlWritePropertyData = (EFileDevice.FileSystem << 16) | (34 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlFindFilesBySid = (EFileDevice.FileSystem << 16) | (35 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlDumpPropertyData = (EFileDevice.FileSystem << 16) | (37 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlSetObjectId = (EFileDevice.FileSystem << 16) | (38 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlGetObjectId = (EFileDevice.FileSystem << 16) | (39 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlDeleteObjectId = (EFileDevice.FileSystem << 16) | (40 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlSetReparsePoint = (EFileDevice.FileSystem << 16) | (41 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlGetReparsePoint = (EFileDevice.FileSystem << 16) | (42 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlDeleteReparsePoint = (EFileDevice.FileSystem << 16) | (43 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlEnumUsnData = (EFileDevice.FileSystem << 16) | (44 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlSecurityIdCheck = (EFileDevice.FileSystem << 16) | (45 << 2) | EIoMethod.Neither | (FileAccess.Read << 14),
        FsctlReadUsnJournal = (EFileDevice.FileSystem << 16) | (46 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlSetObjectIdExtended = (EFileDevice.FileSystem << 16) | (47 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlCreateOrGetObjectId = (EFileDevice.FileSystem << 16) | (48 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlSetSparse = (EFileDevice.FileSystem << 16) | (49 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlSetZeroData = (EFileDevice.FileSystem << 16) | (50 << 2) | EIoMethod.Buffered | (FileAccess.Write << 14),
        FsctlQueryAllocatedRanges = (EFileDevice.FileSystem << 16) | (51 << 2) | EIoMethod.Neither | (FileAccess.Read << 14),
        FsctlEnableUpgrade = (EFileDevice.FileSystem << 16) | (52 << 2) | EIoMethod.Buffered | (FileAccess.Write << 14),
        FsctlSetEncryption = (EFileDevice.FileSystem << 16) | (53 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlEncryptionFsctlIo = (EFileDevice.FileSystem << 16) | (54 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlWriteRawEncrypted = (EFileDevice.FileSystem << 16) | (55 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlReadRawEncrypted = (EFileDevice.FileSystem << 16) | (56 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlCreateUsnJournal = (EFileDevice.FileSystem << 16) | (57 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlReadFileUsnData = (EFileDevice.FileSystem << 16) | (58 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlWriteUsnCloseRecord = (EFileDevice.FileSystem << 16) | (59 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlExtendVolume = (EFileDevice.FileSystem << 16) | (60 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlQueryUsnJournal = (EFileDevice.FileSystem << 16) | (61 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlDeleteUsnJournal = (EFileDevice.FileSystem << 16) | (62 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlMarkHandle = (EFileDevice.FileSystem << 16) | (63 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlSisCopyFile = (EFileDevice.FileSystem << 16) | (64 << 2) | EIoMethod.Buffered | (0 << 14),
        FsctlSisLinkFiles = (EFileDevice.FileSystem << 16) | (65 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        FsctlHsmMsg = (EFileDevice.FileSystem << 16) | (66 << 2) | EIoMethod.Buffered | ((FileAccess.Read | FileAccess.Write) << 14),
        FsctlNssControl = (EFileDevice.FileSystem << 16) | (67 << 2) | EIoMethod.Buffered | (FileAccess.Write << 14),
        FsctlHsmData = (EFileDevice.FileSystem << 16) | (68 << 2) | EIoMethod.Neither | ((FileAccess.Read | FileAccess.Write) << 14),
        FsctlRecallFile = (EFileDevice.FileSystem << 16) | (69 << 2) | EIoMethod.Neither | (0 << 14),
        FsctlNssRcontrol = (EFileDevice.FileSystem << 16) | (70 << 2) | EIoMethod.Buffered | (FileAccess.Read << 14),
        // VIDEO
        VideoQuerySupportedBrightness = (EFileDevice.Video << 16) | (0x0125 << 2) | EIoMethod.Buffered | (0 << 14),
        VideoQueryDisplayBrightness = (EFileDevice.Video << 16) | (0x0126 << 2) | EIoMethod.Buffered | (0 << 14),
        VideoSetDisplayBrightness = (EFileDevice.Video << 16) | (0x0127 << 2) | EIoMethod.Buffered | (0 << 14)
    }
}
